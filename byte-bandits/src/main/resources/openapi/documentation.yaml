openapi: "3.0.3"
info:
    title: "Security Tools API"
    description: "This Security Tools Service will provide computer security oriented tools.
    Among the main features will be: basic antivirus check for files, generation of digital
    certificates and signature verification, file encryption and decryption, secure file
    archive, password and key generation, file integrity protection, and password wallet.\n\n
    Created by Team ByteBandits\n
        - Aryana Mohammadi (am5723)\n
        - Hugo Matousek (hm2953)\n
        - Karthik Guda (kg2982)\n
        - Katya Reichert (kpr2120)
    "
    version: "1.0.0"
servers:
    -   url: "http://0.0.0.0:8080"
paths:
    /storage/Test:
        get:
            summary: "Test secure storage"
            responses:
                "200":
                    description: "OK"
                    content:
                        text/plain:
                            schema:
                                type: "string"
                            examples:
                                Example#1:
                                    value: "Hello World!"
    /storage/Submit:
        post:
            summary: "Submit file to storage"
            requestBody:
                description: "Optional description in *Markdown*"
                required: true
                content:
                    text/plain:
                        schema:
                            type: string
            responses:
                '201':
                    description: Created
                '502':
                    description: Bad Gateway
    /storage/Get/{user}/{record_key}:
        get:
            summary: "Get file from storage"
            parameters:
                - name: user
                  in: path
                  description: User ID
                  required: true
                  schema:
                      type: string
                - name: record_key
                  in: path
                  description: Record Key of File to Retrieve
                  required: true
                  schema:
                      type: string

            responses:
                "200":
                    description: "OK"
                    content:
                        text/plain:
                            schema:
                                type: "string"
                            examples:
                                Example#1:
                                    value: "Hello World!"
                "502":
                    description: "Bad Gateway"
components:
    schemas:
